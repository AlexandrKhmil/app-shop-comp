--------------------------------------------------------------------------------
-- add new account ------------------------------------------------------------
--------------------------------------------------------------------------------
CREATE OR REPLACE FUNCTION account_add_func(
  arg_email CHARACTER VARYING,
  arg_password CHARACTER VARYING
)
  RETURNS INTEGER
  LANGUAGE plpgsql
AS $$
  DECLARE
    is_exists BOOLEAN;
  BEGIN
    is_exists = (SELECT COUNT(1) > 0 
                FROM account
                WHERE email = arg_email);
    IF (is_exists) THEN
      RAISE 'User with this email exists!';
    END IF;
    INSERT INTO account (email, password)
      VALUES (arg_email, arg_password);
    RETURN currval('account_id_seq');
  END;
$$;

--------------------------------------------------------------------------------
-- rate product ----------------------------------------------------------------
--------------------------------------------------------------------------------
CREATE OR REPLACE FUNCTION product_rate_func(
  arg_account_id INTEGER,
  arg_product_link CHARACTER VARYING,
  arg_value INTEGER
)
  RETURNS VOID
  LANGUAGE plpgsql
AS $$
  DECLARE
    var_id INTEGER;
    is_exists BOOLEAN;
  BEGIN
    var_id = (SELECT id FROM product
              WHERE link = arg_product_link);
    is_exists = (SELECT COUNT(1) > 0 
                 FROM rate
                 WHERE account_id = arg_account_id 
                   AND product_id = var_id);
    IF (is_exists) THEN
      UPDATE rate SET value = arg_value
        WHERE account_id = arg_account_id AND product_id = var_id;
    ELSE
      INSERT INTO rate (product_id, account_id, value)
        VALUES(var_id, arg_account_id, arg_value); 
    END IF;
  END;
$$;
