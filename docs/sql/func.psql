--------------------------------------------------------------------------------
-- add new account ------------------------------------------------------------
--------------------------------------------------------------------------------
CREATE OR REPLACE FUNCTION account_add_func(
  arg_email CHARACTER VARYING,
  arg_password CHARACTER VARYING
)
  RETURNS INTEGER
  LANGUAGE plpgsql
AS $$
  DECLARE
    is_exists BOOLEAN;
  BEGIN
    is_exists = (SELECT COUNT(1) > 0 
                FROM account
                WHERE email = arg_email);
    IF (is_exists) THEN
      RAISE 'User with this email exists!';
    END IF;
    INSERT INTO account (email, password)
    VALUES (arg_email, arg_password);
    RETURN currval('account_id_seq');
  END;
$$;

--------------------------------------------------------------------------------
-- rate product ----------------------------------------------------------------
--------------------------------------------------------------------------------
CREATE OR REPLACE FUNCTION product_rate_func(
  arg_account_id INTEGER,
  arg_product_link CHARACTER VARYING,
  arg_value INTEGER
)
  RETURNS VOID
  LANGUAGE plpgsql
AS $$
  DECLARE
    var_id INTEGER;
    is_exists BOOLEAN;
  BEGIN
    var_id = (SELECT id FROM product
              WHERE link = arg_product_link);
    is_exists = (SELECT COUNT(1) > 0 
                 FROM rate
                 WHERE account_id = arg_account_id 
                   AND product_id = var_id);
    IF (is_exists) THEN
      UPDATE rate 
      SET value = arg_value
      WHERE account_id = arg_account_id 
        AND product_id = var_id;
    ELSE
      INSERT INTO rate (product_id, account_id, value)
      VALUES(var_id, arg_account_id, arg_value); 
    END IF;
  END;
$$;

--------------------------------------------------------------------------------
-- add review ------------------------------------------------------------------
--------------------------------------------------------------------------------
CREATE OR REPLACE FUNCTION review_add_func(
  arg_product_link CHARACTER VARYING,
  arg_account_id INTEGER,
  arg_title CHARACTER VARYING,
  arg_text TEXT
)
  RETURNS VOID
  LANGUAGE plpgsql
AS $$
  DECLARE
    var_product_id INTEGER;
    var_is_exists BOOLEAN;
  BEGIN
    var_product_id = (SELECT id FROM product
                      WHERE link = arg_product_link);

    var_is_exists = (SELECT COUNT(1) > 0 FROM review
                     WHERE product_id = var_product_id 
                       AND account_id = arg_account_id);

    IF (var_is_exists) THEN
      UPDATE review 
      SET title = arg_title, text = arg_text
  	  WHERE account_id = arg_account_id AND product_id = var_product_id;
    ELSE
      INSERT INTO review (product_id, account_id, title, text)
      VALUES(var_product_id, arg_account_id, arg_title, arg_text);
    END IF;
  END;
$$;

--------------------------------------------------------------------------------
-- vote review -----------------------------------------------------------------
--------------------------------------------------------------------------------
CREATE OR REPLACE FUNCTION review_add_func(
  arg_review_id INTEGER,
  arg_account_id INTEGER,
  arg_vote BOOLEAN
)
  RETURNS VOID
  LANGUAGE plpgsql
AS $$
  DECLARE
    var_is_exists BOOLEAN;
  BEGIN
    var_is_exists = (SELECT COUNT(1) > 0 FROM review_vote
                     WHERE review_id = arg_review_id 
                       AND account_id = arg_account_id);

    IF (var_is_exists) THEN
      UPDATE review_vote SET vote = arg_vote
  	  WHERE account_id = arg_account_id AND review_id = arg_review_id;
    ELSE
      INSERT INTO review_vote (review_id, account_id, vote)
      VALUES(arg_review_id, arg_account_id, arg_vote);
    END IF;
  END;
$$;